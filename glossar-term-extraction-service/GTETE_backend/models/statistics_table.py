# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401
from GTETE_backend.models.base_model_ import Model  # noqa: E501
from GTETE_backend import util  # noqa: E501


class StatisticsTable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, term: str = None, word_class: str = None, spell_in_full_according_to_db_abk_bw: str = None,
                 description_of_term_according_to_db_term_bw: str = None,
                 absolute_term_frequency_in_requirements_set: int = None,
                 relative_term_frequency_in_requirements_set: str = None,
                 relative_term_frequency_in_allgemeinkorpus: str = None,
                 relative_term_frequency_in_groer_afo_topf: str = None,
                 ratio_of_relative_term_frequencies_to_allgemeinkorpus: str = None,
                 ratio_of_relative_term_frequencies_to_groer_afo_topf: str = None,
                 requirements_id_where_term_appears: str = None):  # noqa: E501
        """StatisticsTable - a model defined in Swagger

        :param term: The term of this StatisticsTable.  # noqa: E501
        :type term: str
        :param word_class: The word_class of this StatisticsTable.  # noqa: E501
        :type word_class: str
        :param spell_in_full_according_to_db_abk_bw: The spell_in_full_according_to_db_abk_bw of this StatisticsTable.  # noqa: E501
        :type spell_in_full_according_to_db_abk_bw: str
        :param description_of_term_according_to_db_term_bw: The description_of_term_according_to_db_term_bw of this StatisticsTable.  # noqa: E501
        :type description_of_term_according_to_db_term_bw: str
        :param absolute_term_frequency_in_requirements_set: The absolute_term_frequency_in_requirements_set of this StatisticsTable.  # noqa: E501
        :type absolute_term_frequency_in_requirements_set: int
        :param relative_term_frequency_in_requirements_set: The relative_term_frequency_in_requirements_set of this StatisticsTable.  # noqa: E501
        :type relative_term_frequency_in_requirements_set: str
        :param relative_term_frequency_in_allgemeinkorpus: The relative_term_frequency_in_allgemeinkorpus of this StatisticsTable.  # noqa: E501
        :type relative_term_frequency_in_allgemeinkorpus: str
        :param relative_term_frequency_in_groer_afo_topf: The relative_term_frequency_in_groer_afo_topf of this StatisticsTable.  # noqa: E501
        :type relative_term_frequency_in_groer_afo_topf: str
        :param ratio_of_relative_term_frequencies_to_allgemeinkorpus: The ratio_of_relative_term_frequencies_to_allgemeinkorpus of this StatisticsTable.  # noqa: E501
        :type ratio_of_relative_term_frequencies_to_allgemeinkorpus: str
        :param ratio_of_relative_term_frequencies_to_groer_afo_topf: The ratio_of_relative_term_frequencies_to_groer_afo_topf of this StatisticsTable.  # noqa: E501
        :type ratio_of_relative_term_frequencies_to_groer_afo_topf: str
        :param requirements_id_where_term_appears: The requirements_id_where_term_appears of this StatisticsTable.  # noqa: E501
        :type requirements_id_where_term_appears: str
        """
        self.swagger_types = {
            'term': str,
            'word_class': str,
            'spell_in_full_according_to_db_abk_bw': str,
            'description_of_term_according_to_db_term_bw': str,
            'absolute_term_frequency_in_requirements_set': int,
            'relative_term_frequency_in_requirements_set': str,
            'relative_term_frequency_in_allgemeinkorpus': str,
            'relative_term_frequency_in_groer_afo_topf': str,
            'ratio_of_relative_term_frequencies_to_allgemeinkorpus': str,
            'ratio_of_relative_term_frequencies_to_groer_afo_topf': str,
            'requirements_id_where_term_appears': str
        }

        self.attribute_map = {
            'term': 'term',
            'word_class': 'word_class',
            'spell_in_full_according_to_db_abk_bw': 'spell_in_full_according_to_DBAbkBw',
            'description_of_term_according_to_db_term_bw': 'description_of_term_according_to_DBTermBw',
            'absolute_term_frequency_in_requirements_set': 'absolute_term_frequency_in_requirements_set',
            'relative_term_frequency_in_requirements_set': 'relative_term_frequency_in_requirements_set',
            'relative_term_frequency_in_allgemeinkorpus': 'relative_term_frequency_in_Allgemeinkorpus',
            'relative_term_frequency_in_groer_afo_topf': 'relative_term_frequency_in_GroßerAfoTopf',
            'ratio_of_relative_term_frequencies_to_allgemeinkorpus': 'ratio_of_relative_term_frequencies_to_Allgemeinkorpus',
            'ratio_of_relative_term_frequencies_to_groer_afo_topf': 'ratio_of_relative_term_frequencies_to_GroßerAfoTopf',
            'requirements_id_where_term_appears': 'requirements_id_where_term_appears'
        }

        self._term = term
        self._word_class = word_class
        self._spell_in_full_according_to_db_abk_bw = spell_in_full_according_to_db_abk_bw
        self._description_of_term_according_to_db_term_bw = description_of_term_according_to_db_term_bw
        self._absolute_term_frequency_in_requirements_set = absolute_term_frequency_in_requirements_set
        self._relative_term_frequency_in_requirements_set = relative_term_frequency_in_requirements_set
        self._relative_term_frequency_in_allgemeinkorpus = relative_term_frequency_in_allgemeinkorpus
        self._relative_term_frequency_in_groer_afo_topf = relative_term_frequency_in_groer_afo_topf
        self._ratio_of_relative_term_frequencies_to_allgemeinkorpus = ratio_of_relative_term_frequencies_to_allgemeinkorpus
        self._ratio_of_relative_term_frequencies_to_groer_afo_topf = ratio_of_relative_term_frequencies_to_groer_afo_topf
        self._requirements_id_where_term_appears = requirements_id_where_term_appears

    @classmethod
    def from_dict(cls, dikt) -> 'StatisticsTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StatisticsTable of this StatisticsTable.  # noqa: E501
        :rtype: StatisticsTable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def term(self) -> str:
        """Gets the term of this StatisticsTable.


        :return: The term of this StatisticsTable.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term: str):
        """Sets the term of this StatisticsTable.


        :param term: The term of this StatisticsTable.
        :type term: str
        """

        self._term = term

    @property
    def word_class(self) -> str:
        """Gets the word_class of this StatisticsTable.


        :return: The word_class of this StatisticsTable.
        :rtype: str
        """
        return self._word_class

    @word_class.setter
    def word_class(self, word_class: str):
        """Sets the word_class of this StatisticsTable.


        :param word_class: The word_class of this StatisticsTable.
        :type word_class: str
        """

        self._word_class = word_class

    @property
    def spell_in_full_according_to_db_abk_bw(self) -> str:
        """Gets the spell_in_full_according_to_db_abk_bw of this StatisticsTable.


        :return: The spell_in_full_according_to_db_abk_bw of this StatisticsTable.
        :rtype: str
        """
        return self._spell_in_full_according_to_db_abk_bw

    @spell_in_full_according_to_db_abk_bw.setter
    def spell_in_full_according_to_db_abk_bw(self, spell_in_full_according_to_db_abk_bw: str):
        """Sets the spell_in_full_according_to_db_abk_bw of this StatisticsTable.


        :param spell_in_full_according_to_db_abk_bw: The spell_in_full_according_to_db_abk_bw of this StatisticsTable.
        :type spell_in_full_according_to_db_abk_bw: str
        """

        self._spell_in_full_according_to_db_abk_bw = spell_in_full_according_to_db_abk_bw

    @property
    def description_of_term_according_to_db_term_bw(self) -> str:
        """Gets the description_of_term_according_to_db_term_bw of this StatisticsTable.


        :return: The description_of_term_according_to_db_term_bw of this StatisticsTable.
        :rtype: str
        """
        return self._description_of_term_according_to_db_term_bw

    @description_of_term_according_to_db_term_bw.setter
    def description_of_term_according_to_db_term_bw(self, description_of_term_according_to_db_term_bw: str):
        """Sets the description_of_term_according_to_db_term_bw of this StatisticsTable.


        :param description_of_term_according_to_db_term_bw: The description_of_term_according_to_db_term_bw of this StatisticsTable.
        :type description_of_term_according_to_db_term_bw: str
        """

        self._description_of_term_according_to_db_term_bw = description_of_term_according_to_db_term_bw

    @property
    def absolute_term_frequency_in_requirements_set(self) -> int:
        """Gets the absolute_term_frequency_in_requirements_set of this StatisticsTable.


        :return: The absolute_term_frequency_in_requirements_set of this StatisticsTable.
        :rtype: int
        """
        return self._absolute_term_frequency_in_requirements_set

    @absolute_term_frequency_in_requirements_set.setter
    def absolute_term_frequency_in_requirements_set(self, absolute_term_frequency_in_requirements_set: int):
        """Sets the absolute_term_frequency_in_requirements_set of this StatisticsTable.


        :param absolute_term_frequency_in_requirements_set: The absolute_term_frequency_in_requirements_set of this StatisticsTable.
        :type absolute_term_frequency_in_requirements_set: int
        """

        self._absolute_term_frequency_in_requirements_set = absolute_term_frequency_in_requirements_set

    @property
    def relative_term_frequency_in_requirements_set(self) -> str:
        """Gets the relative_term_frequency_in_requirements_set of this StatisticsTable.


        :return: The relative_term_frequency_in_requirements_set of this StatisticsTable.
        :rtype: str
        """
        return self._relative_term_frequency_in_requirements_set

    @relative_term_frequency_in_requirements_set.setter
    def relative_term_frequency_in_requirements_set(self, relative_term_frequency_in_requirements_set: str):
        """Sets the relative_term_frequency_in_requirements_set of this StatisticsTable.


        :param relative_term_frequency_in_requirements_set: The relative_term_frequency_in_requirements_set of this StatisticsTable.
        :type relative_term_frequency_in_requirements_set: str
        """

        self._relative_term_frequency_in_requirements_set = relative_term_frequency_in_requirements_set

    @property
    def relative_term_frequency_in_allgemeinkorpus(self) -> str:
        """Gets the relative_term_frequency_in_allgemeinkorpus of this StatisticsTable.


        :return: The relative_term_frequency_in_allgemeinkorpus of this StatisticsTable.
        :rtype: str
        """
        return self._relative_term_frequency_in_allgemeinkorpus

    @relative_term_frequency_in_allgemeinkorpus.setter
    def relative_term_frequency_in_allgemeinkorpus(self, relative_term_frequency_in_allgemeinkorpus: str):
        """Sets the relative_term_frequency_in_allgemeinkorpus of this StatisticsTable.


        :param relative_term_frequency_in_allgemeinkorpus: The relative_term_frequency_in_allgemeinkorpus of this StatisticsTable.
        :type relative_term_frequency_in_allgemeinkorpus: str
        """

        self._relative_term_frequency_in_allgemeinkorpus = relative_term_frequency_in_allgemeinkorpus

    @property
    def relative_term_frequency_in_groer_afo_topf(self) -> str:
        """Gets the relative_term_frequency_in_groer_afo_topf of this StatisticsTable.


        :return: The relative_term_frequency_in_groer_afo_topf of this StatisticsTable.
        :rtype: str
        """
        return self._relative_term_frequency_in_groer_afo_topf

    @relative_term_frequency_in_groer_afo_topf.setter
    def relative_term_frequency_in_groer_afo_topf(self, relative_term_frequency_in_groer_afo_topf: str):
        """Sets the relative_term_frequency_in_groer_afo_topf of this StatisticsTable.


        :param relative_term_frequency_in_groer_afo_topf: The relative_term_frequency_in_groer_afo_topf of this StatisticsTable.
        :type relative_term_frequency_in_groer_afo_topf: str
        """

        self._relative_term_frequency_in_groer_afo_topf = relative_term_frequency_in_groer_afo_topf

    @property
    def ratio_of_relative_term_frequencies_to_allgemeinkorpus(self) -> str:
        """Gets the ratio_of_relative_term_frequencies_to_allgemeinkorpus of this StatisticsTable.


        :return: The ratio_of_relative_term_frequencies_to_allgemeinkorpus of this StatisticsTable.
        :rtype: str
        """
        return self._ratio_of_relative_term_frequencies_to_allgemeinkorpus

    @ratio_of_relative_term_frequencies_to_allgemeinkorpus.setter
    def ratio_of_relative_term_frequencies_to_allgemeinkorpus(self,
                                                              ratio_of_relative_term_frequencies_to_allgemeinkorpus: str):
        """Sets the ratio_of_relative_term_frequencies_to_allgemeinkorpus of this StatisticsTable.


        :param ratio_of_relative_term_frequencies_to_allgemeinkorpus: The ratio_of_relative_term_frequencies_to_allgemeinkorpus of this StatisticsTable.
        :type ratio_of_relative_term_frequencies_to_allgemeinkorpus: str
        """

        self._ratio_of_relative_term_frequencies_to_allgemeinkorpus = ratio_of_relative_term_frequencies_to_allgemeinkorpus

    @property
    def ratio_of_relative_term_frequencies_to_groer_afo_topf(self) -> str:
        """Gets the ratio_of_relative_term_frequencies_to_groer_afo_topf of this StatisticsTable.


        :return: The ratio_of_relative_term_frequencies_to_groer_afo_topf of this StatisticsTable.
        :rtype: str
        """
        return self._ratio_of_relative_term_frequencies_to_groer_afo_topf

    @ratio_of_relative_term_frequencies_to_groer_afo_topf.setter
    def ratio_of_relative_term_frequencies_to_groer_afo_topf(self,
                                                             ratio_of_relative_term_frequencies_to_groer_afo_topf: str):
        """Sets the ratio_of_relative_term_frequencies_to_groer_afo_topf of this StatisticsTable.


        :param ratio_of_relative_term_frequencies_to_groer_afo_topf: The ratio_of_relative_term_frequencies_to_groer_afo_topf of this StatisticsTable.
        :type ratio_of_relative_term_frequencies_to_groer_afo_topf: str
        """

        self._ratio_of_relative_term_frequencies_to_groer_afo_topf = ratio_of_relative_term_frequencies_to_groer_afo_topf

    @property
    def requirements_id_where_term_appears(self) -> str:
        """Gets the requirements_id_where_term_appears of this StatisticsTable.


        :return: The requirements_id_where_term_appears of this StatisticsTable.
        :rtype: str
        """
        return self._requirements_id_where_term_appears

    @requirements_id_where_term_appears.setter
    def requirements_id_where_term_appears(self, requirements_id_where_term_appears: str):
        """Sets the requirements_id_where_term_appears of this StatisticsTable.


        :param requirements_id_where_term_appears: The requirements_id_where_term_appears of this StatisticsTable.
        :type requirements_id_where_term_appears: str
        """

        self._requirements_id_where_term_appears = requirements_id_where_term_appears
